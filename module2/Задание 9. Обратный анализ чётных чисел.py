# Задание 9. Обратный анализ чётных чисел
# Контекст
# Вы работаете в научной лаборатории, в ней проводятся эксперименты и записываются результаты в виде списка целых чисел.
# Ваша задача — написать программу, которая поможет исследователям выделить чётные числа из списка результатов
# экспериментов.
# Они хотят анализировать эти числа в обратном порядке, чтобы исследовать особые закономерности,
# связанные с чётными значениями.
#
# Задача
# Напишите программу, которая считывает целые числа из списка и выводит из него только чётные в обратном порядке.
# Создавать дополнительные списки нельзя.
#
# Ограничения
# Нельзя использовать:
# метод reverse,
# функцию reversed,
# разворот при помощи среза (список[::-1]).

# Советы
# Вы можете управлять направлением перебора элементов в списке (можете перебирать элементы с начала до конца, а можете
# начать с конца и двигаться к началу). Это может стать основой решения задачи. Список является изменяемым типом данных,
# значит вы можете изменять положение элементов внутри списка. Это может стать основой ещё одного варианта решения
# задачи.
# Можете выбрать любой или решить обоими способами!
# Обратите внимание: некоторые операции со списками создают их копии, даже если вы не указываете на это явно.
# Простой пример, который это демонстрирует:
#
# test = [1, 2, 3]
# print(id(test)) # Здесь вы увидите один айди
# test = test[::-1]
# print(id(test)) # А здесь уже другой

list_of_numbers = []
amount = int(input('Сколько чисел в списке: '))

for i in range(amount):
    num = int(input(f'Введите {i + 1} число: '))
    if num % 2 == 0:
        list_of_numbers.append(num)

print(f'Последовательность четных чисел {list_of_numbers}')

for index in range(1, len(list_of_numbers) + 1):
    for i in range(1, len(list_of_numbers) + 1 - index):
        next_dig = -i - 1
        list_of_numbers[-i], list_of_numbers[next_dig] = list_of_numbers[next_dig],  list_of_numbers[-i]

print(f'Последовательность четных чисел в обратном порядке: {list_of_numbers}')

# todo можно пройти по списку в обратную сторону, чтобы избежать перестановок
# l = []
# for i in range(len(list_of_numbers) - 1, -1, -1):
#     l.append(list_of_numbers[i])
# print(l)
# Написано, что создавать дополнительные списки нельзя :( (11 строка)
# блин, я переусложнил похоже, думал что можно распечать список в обратном порядке, но зодоча не об этом.
# ok
