# Задача 3. Глубокое копирование
# Что нужно сделать
# Вы сделали для заказчика структуру сайта по продаже телефонов:

# site = {
#     "html": {
#         "head": {"title": "Куплю/продам телефон недорого"},
#         "body": {
#             "h2": "У нас самая низкая цена на iPhone",
#             "div": "Купить",
#             "p": "Продать",
#         },
#     }
# }

# Заказчик рассказал своим коллегам на рынке, и они захотели такой же сайт для своих товаров. Вы посчитали, что это
# лёгкая задача, и быстро принялись за работу.

# Напишите программу, которая запрашивает у клиента количество сайтов, затем названия продуктов, а после каждого запроса
# выводит на экран активные сайты.

# Условия:
# учтите, что функция должна уметь работать с разными сайтами (иначе вам придётся переделывать программу под каждого
# заказчика заново);
# вы должны получить список, хранящий сайты для разных продуктов (а значит, для каждого продукта нужно будет первым
# делом выполнить глубокое копирование сайта).

# Подсказка. Чтобы заменить элемент, его нужно найти. Для поиска можете использовать рекурсивный алгоритм из задачи по
# поиску элемента.

# Пример вывода

# Сколько сайтов: 2
# Введите название продукта для нового сайта: iPhone
# Сайт для iPhone:

# site = {
#     "html": {
#         "head": {"title": "Куплю/продам iPhone недорого"},
#         "body": {
#             "h2": "У нас самая низкая цена на iPhone",
#             "div": "Купить",
#             "p": "Продать",
#         },
#     }
# }

# Введите название продукта для нового сайта: Samsung
# Сайт для iPhone:

# site = {
#     "html": {
#         "head": {"title": "Куплю/продам iPhone недорого"},
#         "body": {
#             "h2": "У нас самая низкая цена на iPhone",
#             "div": "Купить",
#             "p": "Продать",
#         },
#     }
# }

# Сайт для Samsung:

# site = {
#     "html": {
#         "head": {"title": "Куплю/продам Samsung недорого"},
#         "body": {
#             "h2": "У нас самая низкая цена на Samsung",
#             "div": "Купить",
#             "p": "Продать",
#         },
#     }
# }

# Обратите внимание, что на первой итерации выводится только один сайт (для iPhone), а на второй итерации — оба сайта
# (и для iPhone и для Samsung). Чтобы это реализовать, нужно сохранять сайты в списке и каждый раз печатать все его
# элементы.

# Что оценивается:
# Основной функционал описан в отдельной функции(-ях).


import copy

site = {
    "html": {
        "head": {"title": "Куплю/продам телефон недорого"},
        "body": {
            "h2": "У нас самая низкая цена на iPhone",
            "div": "Купить",
            "p": "Продать",
        },
    }
}


def search_and_change_key(search_key, change_key, data):
    result = None
    if search_key in data:
        data[search_key] = change_key
        return data
    for sub_struct in data.values():
        if isinstance(sub_struct, dict):
            result = search_and_change_key(search_key, change_key, sub_struct)
            if result:
                return data
        else:
            return result


def change_site(name, data, mobiles):
    template_1 = f'Куплю/продам {name} недорого'
    template_2 = f'У нас самая низкая цена на {name}'
    data = search_and_change_key('title', template_1, data)
    data = search_and_change_key('h2', template_2, data)
    mobiles[f'Сайт для {name}:'] = data


def main():
    mobiles = {}
    amt = int(input('Сколько сайтов: '))
    new_site = copy.deepcopy(site)

    for _ in range(amt):
        new_name = input('Введите название продукта для нового сайта: ')
        change_site(new_name, new_site, mobiles)
        for brand, his_site in mobiles.items():
            print(f'{brand}\n'
                  f'{his_site}\n')


main()

# ok
