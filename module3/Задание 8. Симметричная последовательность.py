# Задание 8. Симметричная последовательность
# Что нужно сделать
# Последовательность чисел называется симметричной, если она одинаково читается как слева направо, так и справа налево.
# Например, следующие последовательности являются симметричными:
#
# 1 2 3 4 5 4 3 2 1
#
# 1 2 1 2 2 1 2 1
#
# Пользователь вводит последовательность из N чисел. Напишите программу, которая определяет, какое минимальное
# количество и каких чисел нужно добавить в конец этой последовательности, чтобы она стала симметричной.
#
# Пример 1:
#
# Количество чисел: 5
#
# Число: 1
#
# Число: 2
#
# Число: 1
#
# Число: 2
#
# Число: 2
#
# Последовательность: [1, 2, 1, 2, 2]
#
# Нужно приписать чисел: 3
#
# Сами числа: [1, 2, 1]
#
# Пример 2:
#
# Количество чисел: 5
#
# Число: 1
#
# Число: 2
#
# Число: 3
#
# Число: 4
#
# Число: 5
#
# Последовательность: [1, 2, 3, 4, 5]
#
# Нужно приписать чисел: 4
#
# Сами числа: [4, 3, 2, 1]
#
# Советы и рекомендации
# Убедитесь что ваш алгоритм работает с разными последовательностями, например с такими:
# [1, 2, 1] — в этом случае ничего добавлять не нужно.
#
# [1, 2, 3, 4, 3] — в этом случае надо добавить минимум, то есть числа 2 и 1.

def is_palindrom(num_list):
    reversed_list = []
    for i_num in range(len(num_list) - 1, -1, -1):
        reversed_list.append(num_list[i_num])
    if num_list == reversed_list:
        return True
    else:
        return False


amt_of_nums = int(input('Количество чисел: '))
nums = []

for _ in range(amt_of_nums):
    num = int(input('Число: '))
    nums.append(nums)

print(f'Последовательность: {nums}')

new_nums = []
answer = []

for i_nums in range(len(nums)):
    for j_elem in range(i_nums, len(nums)):
        new_nums.append(nums[j_elem])

    if is_palindrom(new_nums):
        for i_answer in range(i_nums):
            answer.append(nums[i_answer])
        answer.reverse()
        break

    new_nums = []

print(f'Исходный список: {nums}')
print(f'Нужно чисел для палиндрома: {len(answer)}')
print(f'Список этих чисел: {answer}')