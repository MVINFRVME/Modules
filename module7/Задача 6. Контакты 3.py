# Задача 6. Контакты — 3
# Что нужно сделать
# Мы уже помогали Степану с реализацией телефонной книги на устройстве, однако внезапно оказалось, что ей не хватает ещё
# одной полезной функции — поиска.
# Напишите программу, которая бесконечно запрашивает у пользователя действие, которое он хочет совершить:
# добавить контакт или найти человека в списке контактов по фамилии.
# Действие «добавить контакт»: программа запрашивает имя и фамилию контакта, затем номер телефона, добавляет их в
# словарь и выводит на экран текущий словарь контактов. Если этот человек уже есть в словаре, то выводится
# соответствующее сообщение.

# Действие «поиск человека по фамилии»: программа запрашивает фамилию и выводит все контакты с такой фамилией и их
# номера телефонов. Поиск не должен зависеть от регистра символов.

# Пример работы программы:

# Введите номер действия:
# 1.Добавить контакт.
# 2.Найти человека.
# При выборе действия 1:
# Введите имя и фамилию нового контакта (через пробел): Иван Сидоров
# Введите номер телефона: 888
# Текущий словарь контактов: {('Иван', 'Сидоров'): 888}

# Введите номер действия:
# 1.Добавить контакт
# 2.Найти человека
# При выборе действия 1:
# Введите имя и фамилию нового контакта (через пробел): Иван Сидоров
# Такой человек уже есть в контактах.
# Текущий словарь контактов: {('Иван', 'Сидоров'): 888}

# Введите номер действия:
# 1.Добавить контакт
# 2.Найти человека
# При выборе действия 1:
# Введите имя и фамилию нового контакта (через пробел): Алиса Петрова
# Введите номер телефона: 999
# Текущий словарь контактов: {('Иван', 'Сидоров'): 888, ('Алиса', 'Петрова'): 999}

# Введите номер действия:
# 1.Добавить контакт
# 2.Найти человека
# При выборе действия 2:
# Введите фамилию для поиска: Сидоров
# Иван Сидоров 888

# Введите номер действия:
# 1.Добавить контакт
# 2.Найти человека

# Что оценивается: Основной функционал (действия) описан в отдельных функциях.

def add_contact():
    first_name, surname = input('Введите имя и фамилию нового контакта (через пробел): ').split()
    first_name, surname = first_name.title(), surname.title()
    telephone = int(input('Введите номер телефона: '))

    if (first_name, surname) in cont_dict:
        print('Такой человек уже есть в контактах.')
    else:
        cont_dict[(first_name, surname)] = telephone

    print(f'Текущий словарь контактов: {cont_dict}')


def search_contact():
    surname = input('Введите фамилию для поиска: ')

    for i_name in cont_dict:
        if surname.title() in i_name:
            print(i_name, cont_dict[i_name])
            break # todo если нашел, то дальше наверное нет смысла перебирать?

    else: # todo эту проверку можно заменить на else для цикла, будет лаконичнее
        print('Такой человек не найден.')


cont_dict = dict()
while True:
    act = input('\nВведите номер действия:\n'
                '1.Добавить контакт\n'
                '2.Найти человека\n')
    if act == '1':
        add_contact()
    elif act == '2':
        search_contact()
    else:
        print('Ошибка ввода!')
