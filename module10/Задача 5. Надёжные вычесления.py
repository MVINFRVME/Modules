# Задача 5. Надёжные вычисления
# Контекст
# Вы работаете в компании, занимающейся финансовыми вычислениями. Вам необходимо разработать функцию для вычисления
# корня числа, которая будет использоваться в анализе финансовых данных и расчёте инвестиционных показателей. Вы
# понимаете, что передача отрицательного числа или возникновение других ошибок вычисления могут привести к
# непредсказуемым результатам.
#
# Задача
# Напишите функцию, которая будет:
#
# Вычислять и возвращать квадратный корень полученного числа.
# Обрабатывать исключения для отрицательных чисел и других возможных ошибок.
#
# Советы
# При помощи оператора as вы можете сохранить пойманную ошибку в переменную, чтобы затем использовать её для получения
# дополнительной информации:
#
# except Exception as exc:
#     print(exc)
# Старайтесь не смешивать конкретные исключения, которые вы ожидаете, со всеми другими (except Exception будет ловить
# все исключения, которые не были пойманы предыдущими except).

def square_root(num):
    result = None
    try:
        if num < 0:
            raise ValueError
        result = num ** 0.5

    except ValueError:
        print('Число не должно быть отрицательным!')
    except Exception:
        print('Непредвиденная ошибка!')

    return result


try:
    n = int(input('Введите число: '))
    print(f'Квадратный корень числа равен: {square_root(n)}')

except ValueError as exc:
    print(f'{exc}. Введите число, а не строку!')
