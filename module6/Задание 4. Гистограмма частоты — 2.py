# Задание 4. Гистограмма частоты — 2
# Вы уже писали программу для лингвистов, которая получала на вход текст и считала, сколько раз каждый символ
# встречается в строке. Теперь задание изменилось: максимальную частоту выводить не нужно, но необходимо написать
# функцию, которая будет инвертировать полученный словарь. То есть в качестве ключа будет частота, а в качестве значения
# — список символов с этой частотой.

# По итогу нужно реализовать следующие подзадачи:
# - получить текст и создать из него оригинальный словарь частот;
# - создать новый словарь и заполнить его данными из оригинального словаря частот, используя количество повторов в
# качестве ключей, а буквы — в качестве значений, добавляя их в список для хранения.
#
# Пример
# Введите текст: здесь что-то написано
# Оригинальный словарь частот:
# : 2
# - : 1
# З : 1
# а : 2
# д : 1
# е : 1
# и : 1
# н : 2
# о : 3
# п : 1
# с : 2
# т : 2
# ч : 1
# ь : 1

# Инвертированный словарь частот:
# 1 : ['З', 'д', 'е', 'ь', 'ч', '-', 'п', 'и']
# 2 : ['с', ' ', 'т', 'н', 'а']
# 3 : ['о']

# text = input('Введите текст: ')
text = 'здесь что-то написано'
sym_dict = dict()

for sym in text:
    if sym in sym_dict:
        sym_dict[sym] += 1
    else:
        sym_dict[sym] = 1
print('Оригинальный словарь частот:')
for key, value in sorted(sym_dict.items()):
    print(f'{key} : {value}')

new_dict = dict()
for key, value in sym_dict.items():
    if value in new_dict:
        new_dict[value].append(key)
    else:
        new_dict[value] = []
        new_dict[value].append(key)

print('\nИнвертированный словарь частот: ')
for key, value in new_dict.items():
    print(f'{key} : {value}')

# oK
